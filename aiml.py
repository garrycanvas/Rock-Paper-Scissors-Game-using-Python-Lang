# -*- coding: utf-8 -*-
"""AIML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nGgrqKQ3Ici0kVrn-tE748zJcLrT39HP
"""

# Rock, Paper, Scissors Game 🎮
"""
How to Play:
- The computer randomly picks Rock, Paper, or Scissors
- You enter your choice ("rock", "paper", or "scissors")
- The winner of the round is declared, and scores are updated
- You can play multiple rounds until you choose to quit

Features:
- Input Filtering (invalid entries don't crash the game)
- High Score Tracker
- Scoreboard showing wins, losses, and ties

"""

import random
Choices= ["rock","paper","scissors"]

# Computer randomly selects from the given choices using random module's functions
def computer_choice():
  return random.choice(Choices)

# Getting the user's input for their move with error handling
def player_choice():
  while True:
    choice= input("Enter rock, paper, or scissors (or 'quit' to exit):").lower()
    if choice in Choices or choice == "quit":
      return choice
    else:
      print("❌ Invalid input! Please type 'rock', 'paper', or 'scissors'\n")

# Comparing both responses and computing the winner of a single round
def decide_winner(player,computer):
  if player == computer:
    return "tie"
  elif (player == "rock" and computer == "scissors") \
         or (player == "paper" and computer == "rock") \
         or (player == "scissors" and computer == "paper"):
        return "player"
  else:
    return "computer"

# To print the current scoreboard
def display(highscore,scores):
  print("\nScoreboard 📊")
  print(f"  Wins: {scores['player']} | Loss: {scores['computer']} | Ties: {scores['tie']}")
  print(f"  High Score🔥: {highscore}\n")

# Main function
def play_game():
  highscore=0
  scores= {"player": 0,"computer": 0,"tie": 0}

  print("Welcome to Rock🪨, Paper📄, Scissors✂️!")
  print("Type 'quit' anytime to exit\n")

  while True:
    player= player_choice()
    if player == "quit":
      print("👋 Thanks for playing! Final results:")
      display(highscore,scores)
      break

    computer= computer_choice()
    print(f"Computer💻 has chosen: {computer}")

    winner= decide_winner(player,computer)

    if winner == "tie":
      print("😐 It's a tie!")
      scores["tie"] += 1
    elif winner == "player":
      print("🎉 You win this round!")
      scores["player"] += 1
      highscore = max(highscore,scores["player"])
    else:
      print("💻 Computer wins this round!")
      scores["computer"] += 1

    display(highscore,scores)

play_game()